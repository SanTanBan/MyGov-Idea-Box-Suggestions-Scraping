# -*- coding: utf-8 -*-
"""Omdena_kharagpur_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/amanshah22073/Omdena---Kharagpur/blob/main/Omdena_kharagpur_2.ipynb
"""

import pandas as pd

df = pd.read_excel('/content/drive/MyDrive/Sample Data _ Nov 14.xlsx')

df

text = df['Suggestion'][532]

text

pip install googletrans==3.1.0a0

from googletrans import Translator
translator = Translator()
import googletrans

print(googletrans.LANGUAGES)

print(translator.detect(text))

trans = translator.translate(text)

print(trans.text)

chars_hindi = [chr(c) for c in range(0x0900, 0x097f)]
df_hindi = df.loc[df.Suggestion.str.contains('|'.join(chars_hindi) , na= False )]

df_hindi

def translated_text(text):
    text1 = []
    translated = translator.translate(text)
    text1.append(translated.text)
    return text1

df_hindi['Translated_text'] = df_hindi['Suggestion'].apply(translated_text)

df_hindi.drop(['Suggestion'],axis = 1 , inplace = True)

df = df.astype(str)
df_english = df[df.Suggestion.map(lambda x: x.isascii())]

df_english

df_hindi.rename(columns = {'Translated_text':'Suggestion'}, inplace = True)

df_final = pd.concat([df_hindi,df_english],axis = 0)

df_final

import string
string.punctuation
def punct(text):
    text_punc = []
    for char in text:
        if char  not in string.punctuation:
            text_punc.append(char)
        text_joined  = ''.join(text_punc)  
    return text_joined

df_final['Suggestions'] = df_final['Suggestion'].apply(punct)

import nltk
nltk.download("stopwords")
from nltk.corpus import stopwords
stop_words = stopwords.words('english')

def preprocess(text):
    result = []
    for token in gensim.utils.simple_preprocess(text):
        if len(token) >=3 and token not in stop_words:
            result.append(token)
    return result

import gensim

df_final['text'] = df_final['Suggestions'].apply(preprocess)
df_final['Text'] = df_final['text'].apply(lambda x: " ".join(x))

df_final

df_final.drop(['Suggestion' , 'Suggestions' , 'text'] , axis = 1  , inplace = True)

df_final.to_csv('processed_suggestions.csv', index=False)